{"version":3,"sources":["webpack:///./src/components/telegram.js","webpack:///./src/hooks/ClientOnly.js","webpack:///./src/templates/blog-post.js"],"names":["telegramSiteId","telegramSiteIdQuery","async","src","data-comments-app-website","data-limit","children","delegated","useState","hasMounted","setHasMounted","useEffect","data","pageContext","location","post","siteTitle","previous","next","title","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","rel","pageQuery"],"mappings":"+WAwBA,EApByB,WACrB,IAYMA,EAZmB,EAAzB,KAYuBC,kBAAvB,eAEA,OACI,sBAAQC,OAAR,EAAcC,IAAd,sCAAwDC,4BAAxD,EAAqGC,aAAW,S,YCFxH,MAhBA,SAAoB,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAaC,E,oIAAa,mBACRC,oBADQ,GACrCC,EADqC,KACzBC,EADyB,KAM5C,OAHAC,qBAAU,WACND,QADJC,IAGA,EAII,oBADJ,GAFW,M,iuBC4Ef,UA3EyB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAb,eACMI,EAAYJ,oBAAlB,MACQK,EAAmBJ,EAHiC,SAG1CK,EAASL,EAHiC,KAK5D,OACE,iBAAQC,SAAR,EAA4BK,MAAOH,GACjC,iBACEG,MAAOJ,cADT,MAEEK,YAAaL,2BAAgCA,EAAKM,UAEpD,2BACE,0BACE,kBACEC,MAAO,CACLC,UAAWC,YADN,GAELC,aAAc,IAGfV,cAPL,OASE,iBACEO,MAAK,KACAI,aAAM,IADN,CAEHC,QAFG,QAGHF,aAAcD,YAAO,MAGtBT,cAjBP,OAoBE,uBAASa,wBAAyB,CAAEC,OAAQd,EAAKe,QACjD,kBACER,MAAO,CACLG,aAAcD,YAAO,MAGzB,0BACE,gBAhCN,QAoCE,uBACE,kBACEF,MAAO,CACLK,QADK,OAELI,SAFK,OAGLC,eAHK,gBAILC,UAJK,OAKLC,QAAS,IAGX,sBACGjB,GACC,oBAAMkB,GAAIlB,SAAV,KAAgCmB,IAAI,QAApC,KACKnB,cAZX,QAgBE,sBACGC,GACC,oBAAMiB,GAAIjB,SAAV,KAA4BkB,IAAI,QAC7BlB,cADH,MAvDV,SA8DE,mBACE,cAhEN,SALF,IA6EamB,EAAN","file":"component---src-templates-blog-post-js-55760e828b7b765b6f79.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst TelegramComments = () => {\n    const telegramSiteIdQuery = useStaticQuery(\n        graphql`\n          query {\n            site {\n              siteMetadata {\n                telegramSiteId\n              }\n            }\n          }\n        `\n    )\n\n    const telegramSiteId = telegramSiteIdQuery.site.siteMetadata.telegramSiteId;\n\n    return (\n        <script async src=\"https://comments.app/js/widget.js?3\" data-comments-app-website={ telegramSiteId } data-limit=\"100\"></script>\n    )\n}\n\nexport default TelegramComments\n","import React, { useState, useEffect } from 'react'\n\nfunction ClientOnly({ children, ...delegated }) {\n    const [hasMounted, setHasMounted] = useState(false);\n\n    useEffect(() => {\n        setHasMounted(true);\n    }, []);\n    if (!hasMounted) {\n        return null;\n    }\n    return (\n        <div {...delegated}>\n            {children}\n        </div>\n    );\n}\n\nexport default ClientOnly","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport TelegramComments from \"../components/telegram\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport ClientOnly from \"../hooks/ClientOnly\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <ClientOnly>\n        <TelegramComments></TelegramComments>\n      </ClientOnly>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}